{"ast":null,"code":"// User Roles\nexport const ROLES = {\n  ADMIN: 'admin',\n  FACULTY: 'faculty',\n  STUDENT: 'student',\n  VISITOR: 'visitor'\n};\n\n// Role-based permissions\nexport const PERMISSIONS = {\n  [ROLES.ADMIN]: ['create_event', 'edit_event', 'delete_event', 'create_resource', 'edit_resource', 'delete_resource', 'manage_circular', 'view_analytics'],\n  [ROLES.FACULTY]: ['create_event', 'edit_own_event', 'delete_own_event', 'create_resource', 'edit_own_resource', 'delete_own_resource', 'view_circular'],\n  [ROLES.STUDENT]: ['view_events', 'view_resources', 'view_circular'],\n  [ROLES.VISITOR]: ['view_events', 'view_resources']\n};\n\n// Predefined user credentials for testing\nexport const PREDEFINED_CREDENTIALS = {\n  'admin@cbit.ac.in': {\n    password: 'admin123',\n    role: ROLES.ADMIN\n  },\n  'faculty@cbit.ac.in': {\n    password: 'faculty123',\n    role: ROLES.FACULTY\n  },\n  'student@cbit.ac.in': {\n    password: 'student123',\n    role: ROLES.STUDENT\n  }\n};\n\n// Helper function to check if a user has a specific permission\nexport const hasPermission = (userRole, permission) => {\n  if (!userRole || !PERMISSIONS[userRole]) return false;\n  return PERMISSIONS[userRole].includes(permission);\n};","map":{"version":3,"names":["ROLES","ADMIN","FACULTY","STUDENT","VISITOR","PERMISSIONS","PREDEFINED_CREDENTIALS","password","role","hasPermission","userRole","permission","includes"],"sources":["C:/Users/praha/eventify/frontend/src/config/roles.js"],"sourcesContent":["// User Roles\r\nexport const ROLES = {\r\n  ADMIN: 'admin',\r\n  FACULTY: 'faculty',\r\n  STUDENT: 'student',\r\n  VISITOR: 'visitor'\r\n};\r\n\r\n// Role-based permissions\r\nexport const PERMISSIONS = {\r\n  [ROLES.ADMIN]: [\r\n    'create_event',\r\n    'edit_event',\r\n    'delete_event',\r\n    'create_resource',\r\n    'edit_resource',\r\n    'delete_resource',\r\n    'manage_circular',\r\n    'view_analytics'\r\n  ],\r\n  [ROLES.FACULTY]: [\r\n    'create_event',\r\n    'edit_own_event',\r\n    'delete_own_event',\r\n    'create_resource',\r\n    'edit_own_resource',\r\n    'delete_own_resource',\r\n    'view_circular'\r\n  ],\r\n  [ROLES.STUDENT]: [\r\n    'view_events',\r\n    'view_resources',\r\n    'view_circular'\r\n  ],\r\n  [ROLES.VISITOR]: [\r\n    'view_events',\r\n    'view_resources'\r\n  ]\r\n};\r\n\r\n// Predefined user credentials for testing\r\nexport const PREDEFINED_CREDENTIALS = {\r\n  'admin@cbit.ac.in': {\r\n    password: 'admin123',\r\n    role: ROLES.ADMIN\r\n  },\r\n  'faculty@cbit.ac.in': {\r\n    password: 'faculty123',\r\n    role: ROLES.FACULTY\r\n  },\r\n  'student@cbit.ac.in': {\r\n    password: 'student123',\r\n    role: ROLES.STUDENT\r\n  }\r\n};\r\n\r\n// Helper function to check if a user has a specific permission\r\nexport const hasPermission = (userRole, permission) => {\r\n  if (!userRole || !PERMISSIONS[userRole]) return false;\r\n  return PERMISSIONS[userRole].includes(permission);\r\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAG;EACnBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB,CAACL,KAAK,CAACC,KAAK,GAAG,CACb,cAAc,EACd,YAAY,EACZ,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,CACjB;EACD,CAACD,KAAK,CAACE,OAAO,GAAG,CACf,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,iBAAiB,EACjB,mBAAmB,EACnB,qBAAqB,EACrB,eAAe,CAChB;EACD,CAACF,KAAK,CAACG,OAAO,GAAG,CACf,aAAa,EACb,gBAAgB,EAChB,eAAe,CAChB;EACD,CAACH,KAAK,CAACI,OAAO,GAAG,CACf,aAAa,EACb,gBAAgB;AAEpB,CAAC;;AAED;AACA,OAAO,MAAME,sBAAsB,GAAG;EACpC,kBAAkB,EAAE;IAClBC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAER,KAAK,CAACC;EACd,CAAC;EACD,oBAAoB,EAAE;IACpBM,QAAQ,EAAE,YAAY;IACtBC,IAAI,EAAER,KAAK,CAACE;EACd,CAAC;EACD,oBAAoB,EAAE;IACpBK,QAAQ,EAAE,YAAY;IACtBC,IAAI,EAAER,KAAK,CAACG;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;EACrD,IAAI,CAACD,QAAQ,IAAI,CAACL,WAAW,CAACK,QAAQ,CAAC,EAAE,OAAO,KAAK;EACrD,OAAOL,WAAW,CAACK,QAAQ,CAAC,CAACE,QAAQ,CAACD,UAAU,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}